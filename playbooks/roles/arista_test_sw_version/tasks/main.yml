---

- name: Block to test sw version is correct
  block:
    - name: Retrieve current SW version from Arista Device
      arista.eos.eos_facts:
        gather_subset: all
      register: eos

    - name: Assert running equals intended
      ansible.builtin.assert:
        that:
          - eos.ansible_facts.ansible_net_version == sw_version
        success_msg: "upgrade_sw_version_passed"
        fail_msg: "upgrade_sw_version_failed"
      register: test_results

    - name: Set facts used in kafka data payload
      ansible.builtin.set_fact:
        test_name: "Arista_test_sw_ver"
        device_name: "{{ inventory_hostname }}"
        test_status: "{{ test_results['msg'] }}"


    - name: Publish kafka message with test test_results
      bob_private_collection.kafka_python.producer_kafkapy:
        host: "{{ messages_kafka_hostname }}"
        port: "{{ messages_kafka_port }}"
        verify_mode: false
        topic: "{{ messages_kafka_topic }}"
        data: "{{ lookup('ansible.builtin.template', '../../../templates/success_data.j2') }}"

  rescue:
    - name: Set facts used in kafka data payload
      ansible.builtin.set_fact:
        test_name: "Arista_test_sw_ver"
        device_name: "{{ inventory_hostname }}"
        test_status: "{{ test_results['msg'] }}"
        failed_test: "{{ test_results['assertion'] }}"

    - name: Publish kafka message with test test_results
      bob_private_collection.kafka_python.producer_kafkapy:
        host: "{{ messages_kafka_hostname }}"
        port: "{{ messages_kafka_port }}"
        verify_mode: false
        topic: "{{ messages_kafka_topic }}"
        data: "{{ lookup('ansible.builtin.template', '../../../templates/failure_data.j2') }}"
