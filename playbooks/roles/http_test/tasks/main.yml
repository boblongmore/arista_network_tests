---




- name: Assert that the web site is reachable
  block:
    - name: Check http status from user side
      ansible.builtin.uri:
        url: "http://{{ http_test_web_server }}"
        return_content: true
      ignore_unreachable: true
      ignore_errors: true
      delegate_to: user
      register: web_contents

    - name: Assert that Platform Pete is in returned content
      ansible.builtin.assert:
        that:
          - "'Platform Pete' in web_contents['content']"
          - "'Network is unreachable' not in web_contents['msg']"
        success_msg: "HTTP tests passed"
        fail_msg: "HTTP tests failed"
      register: test_results

    # - name: Assert Network Unreachable
    #   ansible.builtin.assert:
    #     that:
    #       - "'Network is unreachable' not in web_contents['msg']"
    #     success_msg: "HTTP tests passed"
    #     fail_msg: "HTTP tests failed"
    #   register: test_results
    #   when: "'unreachable' in web_contents['msg']"

    # - name: Print web_contents
    #   ansible.builtin.debug:
    #     msg: "{{ web_contents.msg }}"
#
    - name: Set facts used in kafka data payload
      ansible.builtin.set_fact:
        test_name: "Arista_test_http"
        device_name: "{{ inventory_hostname }}"
        test_status: "{{ test_results['msg'][0]['msg'] }}"

    - name: Publish kafka message with test test_results
      ansible.builtin.debug:
        msg:
          - "{{ test_status }}"
          # - "{{ lookup('ansible.builtin.template', '../../../templates/success_data.j2') }}"
 # rescue:

 #   - name: Set facts used in kafka data payload
 #     ansible.builtin.set_fact:
 #       test_name: "Arista_test_http"
 #       device_name: "{{ inventory_hostname }}"
 #       test_status: "{{ test_results[0]['msg'] }}"
 #       failed_test: "{{ test_results.[0]['assertion'] }}"
 #     when: web_contents['content']

 #   - name: Set fact for network unreachable
 #     ansible.builtin.set_fact:
 #       test_name: "Arista_test_http"
 #       device_name: "{{ inventory_hostname }}"
 #       test_status: "{{ web_contents.msg }}"
 #       failed_test: "{{ test_results.[0]['assertion'] }}"
 #     when: "'unreachable' in web_contents['msg']"

 #   - name: Handle service failure gracefully
 #     ansible.builtin.debug:
 #       msg:
 #         - "{{ lookup('ansible.builtin.template', '../../../templates/failure_data.j2') }}"
 #         # - "{{ test_name }}"
 #         # - "{{ device_name }}"
 #         # - "{{ test_status }}"
 #         # - "{{ failed_test }}"
