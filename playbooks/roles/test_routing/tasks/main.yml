---

- name: Gather routing info
  arista.eos.eos_command:
    commands:
      - command: show ip bgp summary
        output: json
  register: running_routing

- name: Set running_bgp fact
  ansible.builtin.set_fact:
    running_bgp: "{{ running_routing.stdout[0].vrfs.default }}"

- name: Get BGP Session Data from Netbox
  ansible.builtin.uri:
    url: "{{ netbox_api }}/graphql/"
    method: POST
    headers:
      Authorization: "Token {{ netbox_token }}"
      Accept: "application/json"
      Content-Type: application/json
    body_format: json
    validate_certs: false
    follow_redirects: all
    body:
      query: "{{ lookup('ansible.builtin.template', '../templates/bgp.j2') }}"
  register: bgp_data
  delegate_to: localhost

- name: Set fact for bgp_intent data from Netbox
  ansible.builtin.set_fact:
    bgp_intent: "{{ bgp_data.json.data.netbox_bgp_session_list }}"

- name: Block for testing arista routing health
  block:
    - name: Assert BGP health
      ansible.builtin.assert:
        that:
          - running_bgp.peers[item.remote_address.address | ansible.utils.ipaddr('address')]['peerState'] == 'Established'
          - running_bgp.peers[item.remote_address.address | ansible.utils.ipaddr('address')]['asn'] | int == item.remote_as.asn
          - running_bgp.peers[item.remote_address.address | ansible.utils.ipaddr('address')]['prefixAccepted'] > 0
        success_msg: "Routing_tests_passed"
        fail_msg: "Routing_tests_failed"
      loop: "{{ bgp_intent }}"
      register: test_results

    - name: Set fact for success messages
      ansible.builtin.set_fact:
        device_name: "{{ test_results.results[0].item.device.name }}"
        test_status: "{{ test_results.results[0].msg }}"
        test_name: "Arista_test_routing"

    - name: Publish kafka message with test test_results
      ansible.builtin.include_role:
        name: messages_kafka
      vars:
        messages_kafka_data:
          "{{ lookup('ansible.builtin.template', '../../../templates/success_data.j2') }}"

  rescue:
    - name: Set fact for failure data
      ansible.builtin.set_fact:
        test_name: "Arista_test_routing"
        device_name: "{{ item.item.device.name }}"
        test_status: "{{ item.msg }}"
        local_address: "{{ item.item.local_address.address | ansible.utils.ipaddr('address') }}"
        local_asn: "{{ item.item.local_as.asn }}"
        remote_address: "{{ item.item.remote_address.address | ansible.utils.ipaddr('address') }}"
        remote_asn: "{{ item.item.remote_as.asn }}"
        failed_test: "{{ item.assertion }}"
      loop: "{{ test_results.results }}"
      when: item.msg == "Routing_tests_failed"

    - name: Publish kafka message with test test_results
      ansible.builtin.include_role:
        name: messages_kafka
      vars:
        messages_kafka_data:
          "{{ lookup('ansible.builtin.template', '../../../templates/failure_data.j2') }}"
