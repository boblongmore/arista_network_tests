---

- name: Retrieve int facts via graphql query
  ansible.builtin.uri:
    url: "{{ NETBOX_API }}/graphql/"
    validate_certs: false
    method: POST
    follow_redirects: all
    headers:
      Authorization: " Token {{ NETBOX_TOKEN }}"
      Accept: "application/json"
      Content-Type: application/json
    body_format: json

    body:
      query: "{{ lookup('template', '../templates/graph_int_list.j2') }}"
  register: graph_lookup
  tags: interfaces

- name: Gather network resources
  arista.eos.eos_facts:
    gather_subset:
      - interfaces
  register: network_resources
  tags: interfaces

- name: Set fact for the information we want from the running config
  ansible.builtin.set_fact:
    running_int: "{{ network_resources.ansible_facts.ansible_net_interfaces }}"

- name: Block used to test test_interfaces
  block:
    - name: Use assert module to compare outputs
      ansible.builtin.assert:
        that:
          - (running_int[item.name]['operstatus'] == 'connected') and item.enabled
          - running_int[item.name]['ipv4']['address'] in item.ip_addresses[0]['address']
          - running_int[item.name]['ipv4']['masklen'] == item.ip_addresses[0]['address'] | ansible.utils.ipaddr('prefix')
        success_msg: "Interface tests passed"
        fail_msg: "Interface tests failed"
      loop: "{{ graph_lookup.json.data.interface_list }}"
      when: item.name != "Management1"
      register: test_results

    - name: Set facts used in kafka data payload
      ansible.builtin.set_fact:
        test_name: "Arista_test_interfaces"
        device_name: "{{ test_results.results[0].item.device.name }}"
        test_status: "{{ test_results.results[0].msg }}"

    - name: Publish kafka message with test test_results
      bob_private_collection.kafka_python.producer_kafkapy:
        host: "{{ messages_kafka_hostname }}"
        port: "{{ messages_kafka_port }}"
        verify_mode: false
        topic: "{{ messages_kafka_topic }}"
        data: "{{ lookup('ansible.builtin.template', '../../../templates/success_data.j2') }}"

  rescue:
    - name: Set facts used in kafka data payload
      ansible.builtin.set_fact:
        test_name: "Arista_test_interfaces"
        device_name: "{{ item.item.device.name }}"
        test_status: "{{ item.msg }}"
        interface_name: "{{ item.item.name }}"
        failed_test: "{{ item.assertion }}"
      loop: "{{ test_results.results }}"
      when: item.item.name != "Management1" and item.msg == "Interface tests failed"

    - name: Publish kafka message with test test_results
      bob_private_collection.kafka_python.producer_kafkapy:
        host: "{{ messages_kafka_hostname }}"
        port: "{{ messages_kafka_port }}"
        verify_mode: false
        topic: "{{ messages_kafka_topic }}"
        data: "{{ lookup('ansible.builtin.template', '../../../templates/failure_data.j2') }}"
